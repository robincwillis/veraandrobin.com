@import './variables';

@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  $u1: unit($min-vw);
  $u2: unit($max-vw);
  $u3: unit($min-font-size);
  $u4: unit($max-font-size);

  @if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
    & {
      font-size: $min-font-size;
      @media screen and (min-width: $min-vw) {
        font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
      }
      @media screen and (min-width: $max-vw) {
        font-size: $max-font-size;
      }
    }
  }
}

.font-secondary {
	font-family: $secondary-font;
}

h1, .h1, h2, .h2, h3, .h3, h4, .h4 {
	color: $alert;
}

h1, .h1 {
	@include fluid-type(400px, 2000px, $h1-font-size, $h1-font-size * 2);
}

h2, .h2 {
	@include fluid-type(400px, 2000px, $h2-font-size, $h2-font-size * 1.75);
}

h3, .h3 {
	@include fluid-type(400px, 2000px, $h3-font-size, $h3-font-size * 2);
}

h5, .h5, h5 p, .h5 p {
	@include fluid-type(400px, 2000px, $h5-font-size * .875, $h5-font-size * 1.2);
}

h4, .h4, h4 p, .h4 p {
	@include fluid-type(400px, 2000px, $h4-font-size * .85, $h4-font-size * 1.2);
}

.p.font-secondary,
p.font-secondary,
.font-secondary p,
.font-secondary .p {
	font-family: $secondary-font;
	&.lg,
	&.large {
		font-weight: $light;
	}
}

.font-secondary.lg,
.font-secondary.large {
	p, .p {
		font-weight: $light;
	}
}

p, .p {
	@include fluid-type(400px, 2000px, $p-font-size, $p-font-size * 1.3);
	letter-spacing: 0;
	.lg &,
	&.lg {
		@include fluid-type(400px, 2000px, $lg-p-font-size * .85, $lg-p-font-size * 1.2);
	}
}

.small-caps {
	font-family: $h5-font-family;
	text-transform: $h5-text-transform;
	font-size: $h5-font-size;
	font-weight: $h5-font-weight;
	line-height: $h5-line-height;
	letter-spacing: $h5-letter-spacing;
	@include font-smooth($h5-font-smoothing);
	font-size: .875rem;
	@include fluid-type(400px, 2000px, 13px, 15px);
}
